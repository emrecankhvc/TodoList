@model TodoProject.Models.TodoFilterViewModel
@using System.Globalization
@{
    ViewData["Title"] = "Görevlerim";
}

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="text-primary">Görev Listesi</h2>
        <a href="/Todo/Create" class="btn btn-success">+ Yeni Görev Ekle</a>
    </div>

    <!-- Filtreleme Formu -->
    <form method="get" class="mb-4">
        <div class="row g-3 align-items-end">
            <div class="col-md-2">
                <label asp-for="Status" class="form-label">Durum</label>
                <select asp-for="Status" class="form-select">
                    <option value="">Hepsi</option>
                    <option value="I" selected="@(Model.Status == "I")">Devam Ediyor</option>
                    <option value="C" selected="@(Model.Status == "C")">Tamamlandı</option>
                    <option value="U" selected="@(Model.Status == "U")">Tamamlanmadı</option>
                </select>
            </div>
            <div class="col-md-2">
                <label asp-for="Priority" class="form-label">Öncelik</label>
                <select asp-for="Priority" class="form-select">
                    <option value="">Hepsi</option>
                    <option value="Low" selected="@(Model.Priority == "Low")">Düşük</option>
                    <option value="Medium" selected="@(Model.Priority == "Medium")">Orta</option>
                    <option value="High" selected="@(Model.Priority == "High")">Yüksek</option>
                </select>
            </div>
            <div class="col-md-3">
                <label asp-for="Category" class="form-label">Kategori</label>
                <input asp-for="Category" class="form-control" placeholder="Kategori ara" />
            </div>
            <div class="col-md-3">
                <label asp-for="SortBy" class="form-label">Sırala</label>
                <select asp-for="SortBy" class="form-select">
                    <option value="">Son tarihe göre (azalan)</option>
                    <option value="duedate_asc" selected="@(Model.SortBy == "duedate_asc")">Son tarihe göre (artan)</option>
                    <option value="priority" selected="@(Model.SortBy == "priority")">Önceliğe göre</option>
                    <option value="title" selected="@(Model.SortBy == "title")">Başlığa göre (A-Z)</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary w-100">Filtrele</button>
            </div>
        </div>
    </form>

    @if (!Model.Items.Any())
    {
        <div class="alert alert-info">Henüz hiç göreviniz yok.</div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var item in Model.Items)
            {
                <div class="col">
                    <div class="card shadow-sm h-100">
                        <div class="card-body d-flex flex-column justify-content-between">
                            <div>
                                <h5 class="card-title">@item.Title</h5>
                                <p class="card-text">@item.Description</p>
                                <ul class="list-group list-group-flush mb-3">
                                    <li class="list-group-item">
                                        <strong>Kategori:</strong> @item.Category
                                    </li>
                                    <li class="list-group-item">
                                        <strong>Tarih:</strong> @item.DueDate.ToString("dd MMMM yyyy HH:mm", new CultureInfo("tr-TR"))
                                    </li>
                                    <li class="list-group-item">
                                        <strong>Öncelik:</strong>
                                        @switch (item.Priority)
                                        {
                                            case "Low":
                                                <span class="badge bg-success">Düşük</span>
                                                break;
                                            case "Medium":
                                                <span class="badge bg-warning text-dark">Orta</span>
                                                break;
                                            case "High":
                                                <span class="badge bg-danger">Yüksek</span>
                                                break;
                                            default:
                                                <span class="badge bg-secondary">Bilinmiyor</span>
                                                break;
                                        }
                                    </li>
                                    <li class="list-group-item">
                                        <strong>Durum:</strong>
                                        @switch (item.Status?.ToUpper())
                                        {
                                            case "U":
                                                <span class="badge bg-warning text-dark">Tamamlanmadı</span>
                                                break;
                                            case "I":
                                                <span class="badge bg-info text-dark">Devam Ediyor</span>
                                                break;
                                            case "C":
                                                <span class="badge bg-success">Tamamlandı</span>
                                                break;
                                            default:
                                                <span class="badge bg-secondary">Bilinmiyor</span>
                                                break;
                                        }
                                    </li>
                                </ul>
                            </div>

                            <div class="mt-auto d-flex justify-content-between">
                                <a href="/Todo/Edit/@item.Id" class="btn btn-sm btn-primary">Düzenle</a>
                                <form asp-action="Delete" asp-controller="Todo" method="post" onsubmit="return confirm('Görevi silmek istediğinize emin misiniz?');">
                                    <input type="hidden" name="id" value="@item.Id" />
                                    <button type="submit" class="btn btn-sm btn-danger">Sil</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    @if (TempData["SuccessMessage"] != null)
    {
        <script>
            toastr["success"]("Görev başarılı bir şekilde eklenmiştir.", "Görev eklendi!");
        </script>
    }

    @if (TempData["InfoMessage"] != null)
    {
        <script>
            toastr["info"]("Görev başarılı bir şekilde güncellendi.", "Görev güncellendi!");
        </script>
    }

    @if (TempData["WarningMessage"] != null)
    {
        <script>
            toastr["warning"]("Görev başarılı bir şekilde silinmiştir.", "Görev silindi!");
        </script>
    }
}
